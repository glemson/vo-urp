# --------------------------------------------------
# Human writable properties for project pipeline :
# --------------------------------------------------

#
# File names :
#
# the jar fle containing the VO-URP infrastructure classes
build.src.file        = vo-urp-src.jar
build.gen.file        = vo-urp-gen.jar
build.gen.weave.file  = vo-urp-gen-weave.jar
build.test.file       = vo-urp-test.jar

#
# Properties for DM specific settings
# TODO Should they go to another file or stay in build.propertie s?
#
# the project name is used in various namings of results, such as 
# war file, DDL scripts etc. Should therefore have legal form for file names.  
project.name  =	VO_URP
project.title = Virtual Observatory - UML Representation Pipleline
input         = ./input
source        = aDM.xml
output        = ./output
sources.test  = ./test/java
test.class    = org.vo.urp.test.Main

# JPA generation. 
jpa.persistence.unit=VO-URP-PU

# Java generation
root_package  = org.ivoa
model_package = org.ivoa.dm.model

# XML Schema generation
schemalocation_root  = http://vo-urp.googlecode.com/dm/xsd/
targetnamespace_root = http://www.ivoa.net/xml/VO_URP/v0.1

# TAP generation
# could/should we use eclipselink's target database?
#  set this to 
tap.target_database  = 
tap.target_schema = 

# GraphViz generation (if installed!)
graphviz.path = "c:/Program Files/Graphviz 2.21/bin/dot.exe"

# XSLT (de)noormalisation scripts
xslt.dir=./xslt
xslt.test.dir=./xslt/test
xslt.document.resolverURL=http://www.g-vo.org/vo-urp

# --------------------------------------------------
# Target switches : target.xxx.active
# true / false
# NOTE : only exact 'true' value is checked.
# --------------------------------------------------

# Controls if the database should be reset (views / tables) :
target.db.active = true

# Controls if unit tests should be run finally to check if generated codes are compatible :
target.run.active = true

# Enable static weaving of JPA classes (tomcat) :
target.weaving.active = true

# TODO : add switches for all main ant targets (multiple outputs => multiple switches)

# --------------------------------------------------


# TODO : add java options (doJpa, doJaxb, do...) later (vo-urp)

# --------------------------------------------------
