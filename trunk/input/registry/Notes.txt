Notes/comments on the translation from the VOResource.xsd
and VODataService.xsd schema 
to the vo-urp_registry_DM.xml UML data model.

=======================================================
VOResource.xsd:
In order of the type definitions in
http://www.ivoa.net/xml/VOResource/VOResource-v1.0.xsd
=======================================================

- vr:UTCTimestamp ==> removed
use IVOA DM Profile datatype 'datetime' instead

- vr:UTCDateTime ==> removed
use IVOA DM Profile datatype 'datetime' instead

- vr:Resource  ==> RegDM:/voresource/Resource
validationLevel as a collection of RegDM:/voresource/Validation class.
added logo from vr:Creator as attribute. Not only creators may have a logo.
So can websites and other resources.

- vr:ValidationLevel ==> <<enumeration>> RegDM:/voresource/ValidationLevel
Enumeration with the same literals

- vr:Validation ==> RegDM:/voresource/Validation
ISO extending ValidationLevel, this class has a ValidationLevel attribute 
and an IVO-ID of entity. NOte, latter may not be a Reources, hence use IVO-Identifier 
attribute for this iso .

- vr:AuthorityID ==> removed

- vr:ResourceKey ==> removed

- vr:IdentifierURI ==> removed
Usage of this type is generally replaced with a reference to a Resource.
This may not always be appropriate and in a logical model this class
may be reintroduced. 

- vr:ShortName ==> removed
Where used as the datatype of an attribute replaced with a simple 'string' of
maxlength=16


- vr:Curation ==> RegDM:/voresource/Curation
version added to Resource.
date attribute turned into colelction of Date
Q: can this class be removed? 
	No necessity apart from semantic grouping of curation metadata.
	All attributes and collections can go to Resource itself.

- vr:ResourceName ==> removed
Where used replaced with a reference to RegDM:/voresource/Resource.
May want to reintroduce this in a logical model.

- ==> RegDM:/voresource/Party
Represents an addressable real world party in eg the curation of a resource.
May be registered (indicated by registaredAs reference).
In logical model COULD reintroduce ResourceName as explicit datatype for 
implementing a reference to a Party. 
Advantage: no need to create Party instances to refer to person.
Only for Contact important to have address details.

- ==> <<enumeration>> RegDM:/voresource/CurationRole
enumeration giving possible roles a party can play in curating a resource.
values: publisher, contact, contributor, ...
all refer to a party, which must therefore exist. 


- vr:Contact ==> removed
replaced with generic Contributor class on Curation, referencing Party and having 
curationRole 'contact'

- vr:Creator ==> removed
logo attribute added to Party
replaced with generic Contributor class on Curation, referencing Party and having 
curationRole 'creator'. If a logo exists, it must be made available through the Reources
representing the particular Party.

- vr:Date ==> RegDM:/voresource/Date
Iso extending a UTCDateTime, gave it a 'date' attribute of dtataype datetime

- vr:Content ==> RegDM:/voresource/Content
attribute 'subject' now a cardinality 1 attribute of unlimited length iso a cardianlity 1..* attrbute. 
Supposedly ;-separated. Could be turned into collection of Subject objects.
 
attribute 'type' given cardinality 1.
COULD have turned into collection of new class ResorceType or so.
Note, once VO-URP can deal more pleasantly with primitive attributes of cardinality > 1 
(e.g. separated list or so), can increase cardinality.

attribute 'contentLevel' given cardinality 0..1.
COULD have turned into collection of new class ResorceLevel with this attribute.
Note, once VO-URP can deal more pleasantly with primitive attributes of cardinality > 1 
(e.g. separated list or so), can increase cardinality.

relationhsip translated to collection of Relationhsip class.
Q: could this Content class be removed and all its contents be added to Resource itself?


- vr:Source ==> <<datatype>> RegDM:/voresource/Source
iso extending xsd:token, give it a 'value' attribute of type string.

- vr:Type ==> <<enumeration>> RegDM:/voresource/Type
Simple enumeration translation.

- vr:ContentLevel ==> <<enumeration>> RegDM:/voresource/ContentLevel
Simple enumeration translation.

- vr:Relationship ==> RegDM:/voresource/Relationship
attribute relatedResource turned into reference to Resource

- vr:Organisation ==> RegDM:/voresource/Organisation
 extends Resource
made cardinality 0..1 string attributes out of 'facility' and 'instrument'.
With unimited length to allow users to specify a list of them.
May need to model this differently, as aggreations to a Resource or so.

Q: Can Organistion "be a" Party (in which case maybe we should make Party a Resource?

- vr:Service ==> RegDM:/voresource/Service
extends Reource
gave Rights cardinality 0..1
Q: why is Rights on service, and not on interface?

Made Capability collection of cardinality 1. 

- vr:Rights ==> <<enumeration>> RegDM:/voresource/Rights
Simple enumeration translation.

- vr:Capability ==> RegDM:/voresource/Capability
Remove validationLevel attribute. 
Assume it to be inherited by Service from Resource.

- vr:Interface ==> RegDM:/voresource/Interface

- vr:AccessURL ==> RegDM:/voresource/AccessURL
iso extending anyURI, add 'url' attribute.
Introduce enumeration AccessURLUse for the 'use' attribute

- ==> <<enumeration>> RegDM:/voresource/AccessURLUse
enumeration for the 'use' attribute on AcceessURL

- vr:SecurityMethod ==> RegDM:/voresource/SecurityMethod 
Class representing one or more security methods, Mapped so that we
can create a collection of these on Interface.
Only has a standardURI attribute, so if Interface has only cardinality 0..1
for this collection, could create a simple datatype for this, or even simply an
anyURI attribute.

- vr:WebBrowser ==> RegDM:/voresource/WebBrowser
extends RegDM:/voresource/Interface

- vr:WebService ==> RegDM:/voresource/WebBrowser
extends RegDM:/voresource/Interface
gave wsdlURL cardinality 0..1.
Q: What use for multiple WSDL copies with different URLs?


=======================================================
VODataService.xsd:
In order of the type definitions in
http://www.ivoa.net/xml/VODataService/VODataService-v1.1.xsd
=======================================================
- vd:DataCollection
made it subclass of DataService
motivation: it has coverage, rights, facility and instrument.
Makes for a cleaner model in that Coveragae need not be in composition of two 
distinct classes.
Imho cleaner still would be to have DataService NOT have Coverage, Facility and Instrument, 
but have it declare it gives access to a particular DataCollection.

